# -*- coding: utf-8 -*-
"""Examen_ pregunta 19

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16trbaMb2RpJgQ_PJhI1R-FV2gs4p2h1h
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.stattools import adfuller
from statsmodels.regression.linear_model import OLS
from statsmodels.tools.tools import add_constant
from google.colab import files
import io

# Cargar el archivo Excel desde Colab
uploaded = files.upload()
file_name = next(iter(uploaded))  # Obtener el nombre del archivo cargado
df = pd.read_excel(io.BytesIO(uploaded[file_name]), sheet_name='Sheet1')

# Convertir la columna 'Date' al formato datetime con formato 'YYYY:MM'
df['Date'] = pd.to_datetime(df['Date'], format='%Y:%m')

# Graficar las series GS3M y GS6M
plt.figure(figsize=(10, 6))
plt.plot(df['Date'], df['GS3M'], label='GS3M (3 meses)', color='blue')
plt.plot(df['Date'], df['GS6M'], label='GS6M (6 meses)', color='red')
plt.title('Tasas de Interés a 3 y 6 Meses')
plt.xlabel('Fecha')
plt.ylabel('Tasa de Interés (%)')
plt.legend()
plt.grid(True)
plt.xticks(rotation=45)
plt.tight_layout()
plt.show()

# Función para realizar la prueba ADF e imprimir resultados
def adf_test(series, title):
    result = adfuller(series, autolag='AIC')
    print(f'\nPrueba ADF para {title}:')
    print(f'Estadístico ADF: {result[0]:.4f}')
    print(f'Valor p: {result[1]:.4f}')
    print('Conclusión:', 'Estacionaria' if result[1] < 0.05 else 'No estacionaria', 'al 5% de significancia')

# Realizar prueba ADF para GS3M
adf_test(df['GS3M'], 'GS3M')

# Realizar prueba ADF para GS6M
adf_test(df['GS6M'], 'GS6M')

# Regresión lineal para cointegración: GS6M = α + β * GS3M + e
X = add_constant(df['GS3M'])  # Añadir constante para el intercepto
model = OLS(df['GS6M'], X).fit()
resid = model.resid  # Residuos de la regresión

# Prueba ADF sobre los residuos
print('\nPrueba ADF para los residuos de la regresión (Cointegración):')
adf_result_resid = adfuller(resid, autolag='AIC')
print(f'Estadístico ADF: {adf_result_resid[0]:.4f}')
print(f'Valor p: {adf_result_resid[1]:.4f}')
print('Conclusión:', 'Cointegradas' if adf_result_resid[1] < 0.05 else 'No cointegradas', 'al 5% de significancia')

# Explicación económica de la cointegración
print('\nSignificado económico de la cointegración:')
print('Si las tasas de interés a 3 y 6 meses están cointegradas, implica que existe una relación de largo plazo entre ellas,')
print('es decir, tienden a moverse juntas y cualquier desviación entre ellas es temporal y se corrige con el tiempo.')
print('Esto es esperado en mercados financieros eficientes, donde las tasas a diferentes plazos están vinculadas por')
print('expectativas y arbitraje. Si no hay cointegración, las tasas podrían divergir indefinidamente, lo que sugeriría')
print('ineficiencias en el mercado o factores externos que afectan de manera diferente a cada tasa.')

# Recomendación para el modelo VAR
print('\nRecomendación para el modelo VAR:')
print('Dado que las series no son estacionarias (según las pruebas ADF) pero están cointegradas (según la prueba ADF de los residuos),')
print('se recomienda estimar un modelo VECM (Vector Error Correction Model) en lugar de un VAR en niveles o diferencias.')
print('El VECM incorpora la relación de cointegración de largo plazo y modela las desviaciones temporales. Si se insiste en un VAR,')
print('usar las series en diferencias sería preferible para garantizar estacionariedad, aunque esto podría ignorar la relación de largo plazo.')